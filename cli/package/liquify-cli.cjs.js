"use strict";function e(e){return e&&"object"==typeof e&&"default"in e?e.default:e}Object.defineProperty(exports,"__esModule",{value:!0});var t=require("path"),a=e(require("inquirer")),i=e(require("execa")),n=require("fs-extra"),r=e(require("chalk")),o=e(require("crypto")),s=e(require("@liquify/specs")),c=e(require("strip-json-comments")),l=e(require("jsonminify")),d=e(require("chokidar")),p=e(require("boxen")),u=e(require("json-to-pretty-yaml")),m=e(require("figlet")),h=e(require("console-clear")),g=class{static normalizeInput(e){if(null==e)throw new Error("required origin");return"object"==typeof e&&(e=JSON.stringify(e)),"string"!=typeof e&&(e=e.toString()),e}static normalizeOutput(e){try{return JSON.parse(e)}catch(t){return e}}};const f=[],y=(e,t)=>void 0!==e&&(t=t||e,f.includes(t)||f.push(t),console.warn("["+y.title+"]",t),!0);y.title="DeprecationWarning";var b=y,w=f;b.once=(...e)=>!f.includes(e[1]||e[0])&&y.apply(void 0,e),b._list=w;const{ALGORITHM:v}={ALGORITHM:["aes-256-cbc","aes-256-cbc-hmac-sha1","aes-256-cbc-hmac-sha256","aes-256-cfb","aes-256-cfb1","aes-256-cfb8","aes-256-ctr","aes-256-ofb","aes256","camellia-256-cbc","camellia-256-cfb","camellia-256-cfb1","camellia-256-cfb8","camellia-256-ofb","camellia256"]};class j{constructor(e,t="aes-256-ctr"){if("string"!=typeof e)throw new Error("required an string key");if(""===e)throw new Error("key cannot be empty");if(!v.includes(t))throw new Error(`algorithm ${t} not supported, use those available: ${v.join(", ")}`);e=this.constructor.hash(e,"md5"),Object.defineProperties(this,{algorithm:{value:t},key:{value:e},iv:{value:e.substr(16)},options:{value:{}}})}encode(e){e=g.normalizeInput(e);const t=o.createCipheriv(this.algorithm,this.key,this.iv,this.options);return t.update(e,"utf8","hex")+t.final("hex")}decode(e){e=g.normalizeInput(e);const t=o.createDecipheriv(this.algorithm,this.key,this.iv,this.options),a=t.update(e,"hex","utf8")+t.final("utf8");return g.normalizeOutput(a)}static getCiphers(){return o.getCiphers()}static getHashes(){return o.getHashes()}static md5(e){return b('md5 is deprecated, use hash method instead. e.g. hash("your string", "md5")'),o.createHash("md5").update(e).digest("hex")}static sha1(e){return b('sha1 is deprecated, use hash method instead. e.g. hash("your string", "sha1")'),o.createHash("sha1").update(e).digest("hex")}static hash(e,t){if(j.hasHash(t))return o.createHash(t).update(e).digest("hex");throw new Error("hash "+t+" not found in your platform")}static hasHash(e){return-1!==j.getHashes().indexOf(e)}}var k=j;const $=new k("af6f97dbaa3ed81e9fc4"),{log:q}=console;const S=require("../../package.json"),{log:x}=console,C=e=>t=>x(r`{redBright Error} in {red ${e}}\n${t}\n`),O=async(e,t,a,i)=>{const o=new k("af6f97dbaa3ed81e9fc4"),s=o.encode(i),c=o.encode(e);return await n.writeFile(`${t}/${c}.js`,`module.exports="${s}";`),global.watch||x(r`encrypted {magenta ${e}} to {green ${c}}`),a.encrypt[c]=`${c}=require("./${c}")`,a},P=async(e,t)=>{await O("specs",e,t,t.specs),await O("grammar",e,t,t.bb7485c5a2338a);const{parsing:a}=(e=>{const{parsing:t,cache:a,cache:{standard:i}}=e;for(const n in a){"object"!=typeof t[n]&&(t[n]={});const{filter:r=[],object:o=[]}=a[n];e.parsing[n].objects=[...o].sort(),e.parsing[n].filters="standard"!==n?[...r,...i.filter].sort():i.filter.sort()}return e})(t),{encrypt:i}=await O("parsing",e,t,a),r=`${"const "+Object.values(i).join(",")};module.exports={${Object.keys(i).join(",")}};`;await n.writeFile(e+"/index.js",r)},I=(e,a)=>async i=>{const r=i?`${e}/${i}`:e,o=t.basename(r).replace(/\.[^/.]+$/,""),s=await n.readFile(r),d=c(s.toString()),p=JSON.parse(l(d)),{cache:u}=((e,t,a)=>{t.cache[e]={deprecated:[]};for(const[i,{type:n,deprecated:r}]of Object.entries(a))t.cache[e][n]||(t.cache[e][n]=[]),r?t.cache[e].deprecated.push(i):t.cache[e][n].push(i);return t})(o,a,p);a.specs[o]=p,a.grammar[o]=((e,t={})=>{for(const a in e)e[a].length&&(t[a]=`(${e[a].join("|")})`);return t})(u[o])},L=async(e,t,a)=>{const i=await n.readdir(e),r=I(e,a),o=C(e);for(const e of i)await r(e).catch(o);return await P(t,a).catch(o),a};const N=async e=>{const t=await n.readFile(e),a=c(t.toString()),i=JSON.parse(a);return i.$schema&&delete i.$schema,i};var E={engine:"pnpm",interface:{command:"liquify",description:"This CLI is used for developing the Liquify IDE tool and provides a command line interface to bundle, package and maintain the project.",commands:[{command:"git",description:"Common git related operations for the project"},{command:"package",description:"Common git related operations for the project"},{command:"peek",description:"Common git related operations for the project"},{command:"publish",description:"Common git related operations for the project"}],packages:[{package:"@liquify/clients",command:"client",filters:[{command:"vscode"},{command:"sublime"},{command:"atom"}],description:"Build and compile bundles"},{package:"@liquify/liquid-language-grammars",command:"grammar",filters:[{command:"create"}],description:"Packaging execution, eg: npm pack"},{package:"@liquify/schema-stores",command:"schema",description:"Common git related operations for the project"},{package:"@liquify/liquid-language-server",command:"server",description:"Publish to CDN, Netlify, Marketplace etc"},{package:"@liquify/specs",command:"specs",description:"Publish to CDN, Netlify, Marketplace etc"}],flags:[{name:"config",short:"c",description:"Use configuration file (defaults to `.liquifyrc.json`"},{name:"watch",short:"w",description:"Watch and bundle file/s"},{name:"main",short:"m",description:"Define a main (entry) configuration file"},{name:"input",short:"i",description:"Input path to directory of file/s"},{name:"output",short:"o",description:"Output path destination of bundled file/s"},{name:"prod",short:"p",description:"Production bundle build"},{name:"dev",short:"d",description:"Develop bundle build (default)"},{name:"postinstall",short:"pi",description:"Post install"},{name:"help",short:"h",description:"Shows the CLI help and commands list"}]}},B={banner:({name:e,main:a,version:i,author:r})=>`\n/**\n * @license\n *\n * THIS IS PROPRIETARY CODE\n *\n * Copyright of Vellocet, Inc - All Rights Reserved.\n * Unauthorized copying or modification of this file, via any medium is strictly prohibited.\n * Please refer to the LICENSE.txt and/or ThirdPartyNotices.txt files included in bundle.\n *\n * ${t.basename(a)}\n *\n * Package:  ${e}\n * Version:  ${i}\n * Updated:  ${new Date(n.statSync(a).mtimeMs).toISOString().replace(/T/," ").substr(0,19)}\n * Website:  https://www.liquify.dev\n * License:  See LICENSE\n *\n * Written by ${r}\n *\n */`};exports.rollup=B,exports.run=async e=>{const o=process.cwd(),c=(({_:[e,t=null]})=>{for(const{command:a,filters:i}of E.calls){if(console.log(a===e),a===e)return{command:a,filter:t};if(a===e&&t&&i.length>0)for(const e of i)if(e.command===t)return{command:a,filter:t}}})(e);if(console.log(e),!c)return C("Command\n")(JSON.stringify(c));const g=((e,a)=>async([i,n])=>{for(const{name:r,short:o}of E.options)r!==i&&o!==i||await Object.assign(a,{[r]:["config","main","input","output","peek"].includes(r)?t.resolve(e,n):n})})(o,c);switch(Object.entries(e).forEach(await g),c.command){case"specs":await(async(e,a={specs:{},cache:{},grammar:{},parsing:{},encrypt:{}})=>{const{input:i,output:n}=e,o=C(i);if(e.watch){x(r`{bold.cyan Liquid Specifications}\n`),await L(i,n,a).catch(o);const e=d.watch(i+"/**",{persistent:!0}),s=((e,a)=>async i=>{const n=t.basename(i),o=C(n);x(r`{cyan changed} '{yellow ${n}}'`);const s=I(i,a);await s().catch(o),await P(e,a).catch(o)})(n,a);global.watch=!0,e.on("change",s).on("error",o)}else x(r`{bold.cyan Liquid Specifications}\n`),await L(i,n,a).catch(o)})(c);break;case"peek":await(async e=>{const{input:o}=e,s=await n.readdir(o),c=(e=>a=>"index"!==(a=t.basename(a).replace(/\.[^/.]+$/,""))&&(r`${$.decode(a)}    {dim.magenta ${a} }`,t.resolve(e,a)))(o),l=s.map(c).filter(Boolean),{file:d}=await a.prompt([{type:"list",name:"bundle",message:"Select Bundle",choices:l}]),p=await i("pnpx",["fx",d+".js"],{stdio:"inherit"});try{await p}catch(e){q(""+e.shortMessage)}})(c);break;case"grammar":await(async(e,a={specs:{},cache:{},grammar:{},parsing:{},encrypt:{}})=>{const{output:i}=e,o=process.cwd(),c=await N(e.main),d=await N(t.resolve(o,c.input)),p=await(async e=>$.decode(s.bb7485c5a2338a))(),m=(h=i,async({input:e,output:t})=>{const a=await N(e),i=l(JSON.stringify(a)),o=u.stringify(a);await n.writeFile(`${h}/${t}.json`,i),x(r`{cyan JSON Injection} {green ${t}.json}`),await n.writeFile(`${h}/${t}.yaml`,o),x(r`{yellow YAML Injection} {green ${t}.yaml}`)});var h;const g=(async(e,t,a)=>a=>{if(!e[a.variant])return;const{repository:i}=t,{object:n}=e[a.variant];i.objects.patterns})(p,d);c.injections.forEach(await m),c.variations.forEach(await g)})(c);break;default:await(async(e=[{type:"list",name:"run",message:"Select operation:",choices:[r`Bundle    {gray.italic Build and compile bundles}`,r`Package   {gray.italic Packaging execution, eg: npm pack}`,r`Git       {gray.italic Common git related operations for the project}`,r`Publish   {gray.italic Publish to CDN, Netlify, Marketplace etc}`,r`Test      {gray.italic Run various tests}`,r`Config    {gray.italic Project configuration and settings}`]}])=>{h(!0),x(r`{cyan ${m.textSync("Liquify CLI",{font:"Slant",horizontalLayout:"controlled smushing"})}}`),x(p([r`{magentaBright Package}{dim :} ${S.name}                              `,r`{magentaBright Version}{dim :} ${S.version}                           `,r`{magentaBright Private}{dim :} ${S.private}`].join("\n"),{padding:0,borderColor:"gray",dimBorder:!0,borderStyle:{topLeft:" ",topRight:" ",bottomLeft:" ",bottomRight:" ",horizontal:"-",vertical:" "}}));const{run:t}=await a.prompt(e);return t.toLowerCase().substring(0,t.indexOf(" ")),await(async()=>{const{bundle:e}=await a.prompt([{type:"list",name:"bundle",message:"Select Bundle",choices:[r`Client    {gray.italic Build and compile bundles}`,r`Grammar   {gray.italic Packaging execution, eg: npm pack}`,r`Schema    {gray.italic Common git related operations for the project}`,r`Server    {gray.italic Publish to CDN, Netlify, Marketplace etc}`,r`Specs     {gray.italic Run various tests}`,r`{magenta < Go Back}`]}]),t=e.toLowerCase().substring(0,e.indexOf(" ")),n=C(t);return await i("pnpm",["run","build","--filter","./packages/specs"],{stdio:"inherit"}).catch(n)})()})()}};
