"{\n  \"name\": \"Liquid Jekyll\",\n  \"scopeName\": \"source.liquid.jekyll\",\n  \"fileTypes\": [\n    \"liquid\"\n  ],\n  \"injections\": {\n    \"L:string - (string.quoted.*.html)\": {\n      \"patterns\": [\n        {\n          \"include\": \"#tags\"\n        },\n        {\n          \"include\": \"#output\"\n        }\n      ]\n    }\n  },\n  \"patterns\": [\n    {\n      \"include\": \"#comments\"\n    },\n    {\n      \"include\": \"#tags\"\n    },\n    {\n      \"include\": \"#output\"\n    },\n    {\n      \"include\": \"#rogue\"\n    },\n    {\n      \"include\": \"text.html.basic\"\n    }\n  ],\n  \"repository\": {\n    \"comments\": {\n      \"name\": \"comment.block.liquid\",\n      \"begin\": \"{%-?\\\\s*comment\\\\s*-?%}\",\n      \"end\": \"{%-?\\\\s*endcomment\\\\s*-?%}\"\n    },\n    \"tags\": {\n      \"name\": \"punctuation.output.liquid\",\n      \"begin\": \"({%)(-)?\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.tag.begin.liquid\"\n        },\n        \"2\": {\n          \"name\": \"keyword.other.whitespace.liquid\"\n        }\n      },\n      \"patterns\": [\n        {\n          \"name\": \"entity.name.tag.liquid\",\n          \"match\": \"(?:(?<={%)|(?<={%-))\\\\s*\\\\w+\"\n        },\n        {\n          \"include\": \"#objects\"\n        },\n        {\n          \"include\": \"#numeric\"\n        },\n        {\n          \"include\": \"#constants\"\n        },\n        {\n          \"include\": \"#parameters\"\n        },\n        {\n          \"include\": \"#invalid\"\n        },\n        {\n          \"include\": \"#operators\"\n        },\n        {\n          \"include\": \"#strings\"\n        },\n        {\n          \"include\": \"#filters\"\n        },\n        {\n          \"include\": \"#imports\"\n        }\n      ],\n      \"end\": \"(-)?(%})\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.other.whitespace.liquid\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.definition.tag.end.liquid\"\n        }\n      }\n    },\n    \"output\": {\n      \"name\": \"punctuation.output.liquid\",\n      \"begin\": \"({{)(-)?\",\n      \"beginCaptures\": {\n        \"1\": {\n          \"name\": \"punctuation.definition.tag.begin.liquid\"\n        },\n        \"2\": {\n          \"name\": \"keyword.other.whitespace.liquid\"\n        }\n      },\n      \"patterns\": [\n        {\n          \"include\": \"#objects\"\n        },\n        {\n          \"include\": \"#numeric\"\n        },\n        {\n          \"include\": \"#constants\"\n        },\n        {\n          \"include\": \"#parameters\"\n        },\n        {\n          \"include\": \"#invalid\"\n        },\n        {\n          \"include\": \"#operators\"\n        },\n        {\n          \"include\": \"#strings\"\n        },\n        {\n          \"include\": \"#filters\"\n        }\n      ],\n      \"end\": \"(-)?(}})\",\n      \"endCaptures\": {\n        \"1\": {\n          \"name\": \"keyword.other.whitespace.liquid\"\n        },\n        \"2\": {\n          \"name\": \"punctuation.definition.tag.end.liquid\"\n        }\n      }\n    },\n    \"objects\": {\n      \"patterns\": [\n        {\n          \"name\": \"support.class.liquid\",\n          \"match\": \"(?:(?<=[{%}>=!\\\\[\\\\]\\\\-|:])|(?<=\\\\s))(\\\\w+)(?=\\\\.)\"\n        },\n        {\n          \"name\": \"support.class.liquid\",\n          \"match\": \"\\\\b(undefined)\\\\b\"\n        }\n      ]\n    },\n    \"parameters\": {\n      \"patterns\": [\n        {\n          \"name\": \"variable.parameter.liquid\",\n          \"match\": \"(?!\\\\|\\\\s*)\\\\b([a-zA-Z0-9_-]+)(?=:\\\\s*)\"\n        }\n      ]\n    },\n    \"numeric\": {\n      \"patterns\": [\n        {\n          \"name\": \"constant.numeric.float.liquid\",\n          \"match\": \"(-|\\\\+)?\\\\s*[0-9]+(\\\\.[0-9]+)?\"\n        },\n        {\n          \"name\": \"constant.numeric.integer.liquid\",\n          \"match\": \"(\\\\+|\\\\-)[\\\\d]+\"\n        },\n        {\n          \"name\": \"constant.numeric.natural.liquid\",\n          \"match\": \"[\\\\d]+\"\n        }\n      ]\n    },\n    \"constants\": {\n      \"patterns\": [\n        {\n          \"name\": \"constant.language.liquid\",\n          \"match\": \"(false|true|nil|null|empty|blank)\"\n        },\n        {\n          \"name\": \"constant.character.entity.liquid\",\n          \"match\": \"(&)([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+)(;)\",\n          \"captures\": {\n            \"1\": {\n              \"name\": \"punctuation.definition.entity.html\"\n            },\n            \"3\": {\n              \"name\": \"punctuation.definition.entity.html\"\n            }\n          }\n        }\n      ]\n    },\n    \"invalid\": {\n      \"patterns\": [\n        {\n          \"match\": \"&\",\n          \"name\": \"invalid.illegal.bad-ampersand.liquid\"\n        },\n        {\n          \"match\": \"(\\\\[)(\\\\|)(?=[^\\\\]]*)(?=\\\\])\",\n          \"captures\": {\n            \"2\": {\n              \"name\": \"invalid.illegal.filter.liquid\"\n            },\n            \"3\": {\n              \"name\": \"invalid.illegal.filter.liquid\"\n            }\n          }\n        },\n        {\n          \"match\": \"(?=if|unless|elsif)\\\\s*[^%}]+\\\\s(in)\\\\s+\",\n          \"captures\": {\n            \"3\": {\n              \"name\": \"invalid.illegal.operator.liquid\"\n            }\n          }\n        },\n        {\n          \"name\": \"invalid.illegal.filter.liquid\",\n          \"match\": \"(?<=\\\\s)(\\\\+|\\\\-|\\\\/|\\\\*)(?=\\\\s)\"\n        }\n      ]\n    },\n    \"operators\": {\n      \"patterns\": [\n        {\n          \"match\": \"\\\\=\",\n          \"name\": \"keyword.operator.assignment.augmented.liquid\"\n        },\n        {\n          \"match\": \"\\\\.\",\n          \"name\": \"keyword.other.dot.liquid\"\n        },\n        {\n          \"name\": \"keyword.operator.logical.liquid\",\n          \"match\": \"\\\\s+(and|or|contains|in)\\\\s+\"\n        },\n        {\n          \"name\": \"keyword.operator.equality.liquid\",\n          \"match\": \"\\\\s+(\\\\!=|\\\\=\\\\=|\\\\<|\\\\>|\\\\>\\\\=|\\\\<\\\\=)\\\\s+\"\n        },\n        {\n          \"name\": \"keyword.other.colon.liquid\",\n          \"match\": \":\"\n        },\n        {\n          \"name\": \"keyword.other.array-item.liquid\",\n          \"match\": \"\\\\[|\\\\]\"\n        },\n        {\n          \"name\": \"variable.parameter.liquid\",\n          \"match\": \"(?<=\\\\s)(as|with|offset|limit|reverse|cols)\"\n        }\n      ]\n    },\n    \"strings\": {\n      \"patterns\": [\n        {\n          \"name\": \"string.quoted.single.liquid\",\n          \"begin\": \"'\",\n          \"end\": \"'\"\n        },\n        {\n          \"name\": \"string.quoted.double.liquid\",\n          \"begin\": \"\\\"\",\n          \"end\": \"\\\"\"\n        }\n      ]\n    },\n    \"filters\": {\n      \"patterns\": [\n        {\n          \"name\": \"support.function.with-args.liquid\",\n          \"match\": \"(\\\\|\\\\s*)(?![\\\\.0-9])([a-zA-Z0-9_-]+)(?=\\\\:\\\\s*)\",\n          \"captures\": {\n            \"1\": {\n              \"name\": \"keyword.separator.pipe.liquid\"\n            },\n            \"2\": {\n              \"name\": \"support.function.filter.liquid\"\n            }\n          }\n        },\n        {\n          \"name\": \"support.function.without-args.liquid\",\n          \"match\": \"(\\\\|\\\\s*)(?![\\\\.0-9])([a-zA-Z0-9_-]+)\\\\s*\",\n          \"captures\": {\n            \"1\": {\n              \"name\": \"keyword.separator.pipe.liquid\"\n            },\n            \"2\": {\n              \"name\": \"support.function.filter.liquid\"\n            }\n          }\n        }\n      ]\n    },\n    \"imports\": {\n      \"patterns\": [\n        {\n          \"name\": \"markup.underline.link.liquid\",\n          \"match\": \"((?<=render)|(?<=include))\\\\s([^{,'\\\"]+?)\\\\s+\",\n          \"captures\": {\n            \"0\": {\n              \"name\": \"markup.underline.link.liquid\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}"
